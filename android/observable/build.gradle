plugins {
  id "com.android.library"
  id "org.jetbrains.kotlin.multiplatform"
}

version = "1.0.0-SNAPSHOT"

android {
  compileSdkVersion rootProject.ext.compileSdkVersion
  defaultConfig {
    minSdkVersion rootProject.ext.minSdkVersion
    targetSdkVersion rootProject.ext.targetSdkVersion
    versionCode 14
    versionName "1.0.0"
    testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
  }
}

dependencies {
}

kotlin {
  targets {
    android()
    jvm()
    fromPreset(presets.iosArm32, 'iosArm32') {
      binaries.framework('Observable')
    }
    fromPreset(presets.iosArm64, 'iosArm64') {
      binaries.framework('Observable')
    }
    fromPreset(presets.iosX64, 'iosX64') {
      binaries.framework('Observable')
    }
  }
  sourceSets {
    commonMain {
      dependencies {
        implementation "org.jetbrains.kotlin:kotlin-stdlib"
      }
    }
    commonTest {
      dependencies {
        implementation "org.jetbrains.kotlin:kotlin-test-common:$kotlin_version"
        implementation "org.jetbrains.kotlin:kotlin-test-annotations-common:$kotlin_version"
      }
    }
    jvmMain {
      dependencies {
        implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
      }
    }
    jvmTest {
      dependencies {
        implementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
      }
    }
    nativeCommonMain {
      dependsOn commonMain
      dependencies {
      }
    }
    nativeCommonTest {
      dependsOn commonTest
    }
    appleMain {
      dependsOn nativeCommonMain
    }
    appleTest {
      dependsOn nativeCommonTest
    }
    iosArm32().compilations.main.defaultSourceSet {
      dependsOn appleMain
    }
    iosArm32().compilations.test.defaultSourceSet {
      dependsOn appleTest
    }
    iosArm64().compilations.main.defaultSourceSet {
      dependsOn appleMain
    }
    iosArm64().compilations.test.defaultSourceSet {
      dependsOn appleTest
    }
    iosX64().compilations.main.defaultSourceSet {
      dependsOn appleMain
    }
    iosX64().compilations.test.defaultSourceSet {
      dependsOn appleTest
    }
  }
}

configurations {
  compileClasspath
}