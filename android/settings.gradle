pluginManagement {
  resolutionStrategy {
    eachPlugin {
      if (requested.id.id == "kotlin-multiplatform") {
        useModule("org.jetbrains.kotlin:kotlin-gradle-plugin:${requested.version}")
      }
      if (requested.id.id == "org.jetbrains.kotlin.native.cocoapods" ||
          requested.id.id == "kotlin-native-cocoapods") {
        useModule("org.jetbrains.kotlin:kotlin-gradle-plugin:${requested.version}")
      }
      if (requested.id.id == "kotlinx-serialization") {
        useModule("org.jetbrains.kotlin:kotlin-serialization:${requested.version}")
      }
    }
  }
}

include ':app', ':observable-livedata'
include ':common'
include ':common:jvmMain'
include ':common:iosMain'

include ':observable'
include ':observable:jvmMain'
include ':observable:iosMain'

include ':reactive-streams-mpp'
include ':reactive-streams-mpp:jvmMain'
include ':reactive-streams-mpp:iosMain'

enableFeaturePreview('GRADLE_METADATA')